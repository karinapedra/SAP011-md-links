cli.js


#!/usr/bin/env node

const { program } = require('commander');

const readFile = require ('./index');

program.version('1.0.0');

program
    .command('read-file <file-name>')
    .description('Read the content of a file')
    .action((fileName) => {
        readFile(fileName)
        .then((results) =>{ 
            console.log(results)
            // results.foreach((result) => {
            //  console.log(`Valid: ${result.url}`);
            //  console.log(`Not valid: ${result.url}`);
            // })
        })
    });


program.parse(process.argv);



//     try {
//       const results = await readFile(fileName);
//       results.forEach((result) => {
//         if (result.status) {
//         } else {
//         }
//       });
//     } catch (error) {
//       console.log('An error occurred:', error);
//     }
//   });

// program.parse(process.argv);


index.js


const fs = require('fs');
const readline = require('readline');



function readFile(fileName) {
  return new Promise((resolve, reject) => {
  const fileStream = fs.createReadStream(fileName, 'utf8');
  const linkRegex = /https?:\/\/\S+/g;
  const results = [];

  const rl = readline.createInterface({
      input: fileStream,
      crlfDelay: Infinity,
  });
  const validations = []
  rl.on('line', (line) => {
    const links = line.match(linkRegex);
      if (links) {
            const fecthPromises = links.map((link) => {
            validations.push(fetch(link) //função
                  .then((response) => {
                    const result = {
                      url: link,
                      status: response.status,
                      statusText: response.statusText,
                    }
                    results.push(result);
                 //   resolve(result)
                  })
                  .catch((error) => {
                    const result = {
                      url: link,
                      error: error.message,
                      }
                      results.push(result);
                   //   resolve(result)
                  })
            )
                });
               // console.log(fecthPromises)
                //validations.push(fecthPromises)
              }
            });
            console.log(validations)
            Promise.all(validations).then(() => {
              resolve(results)
            })
             rl.on('close', () => {
               resolve(results);
              });
              rl.on('error', (error) => {
              reject(error);
            });
          });
          }

module.exports = readFile;
